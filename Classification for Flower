# You can also use this section to suppress warnings generated by your code:
def warn(*args, **kwargs):
    pass
import warnings
warnings.warn = warn
warnings.filterwarnings('ignore')

import pandas as pd
from sklearn.linear_model import LogisticRegression

""" 
Task 1 - Load the data in a csv file into a dataframe
"""
# the data set is available at the url below.
URL = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-BD0231EN-SkillsNetwork/datasets/iris.csv"

# using the read_csv function in the pandas library, we load the data into a dataframe.
df = pd.read_csv(URL)

# show 5 random rows from the dataset
print(df.sample(5))
# show the shape of the dataframe
print("Shape of the dataframe:", df.shape)
# create a scatter plot of SepalLengthCm vs SepalWidthCm
df.plot.scatter(x="SepalLengthCm", y="SepalWidthCm")

"""
Task 2 - Identify the target column and the data columns
"""
# Target is the value that our machine learning model needs to predict
target = df["Species"]
# Features are the values that our machine learning model uses to make predictions
features = df[["SepalLengthCm", "SepalWidthCm", "PetalLengthCm", "PetalWidthCm"]]

"""
Task 3 - Build and Train a Logistic Regression Model
"""
# Create a Logistic Regression model
classifier = LogisticRegression()

# Train the model using the features and target
classifier.fit(features, target)

"""
Task 4 - Evaluate the model and make predictions
"""
# Show the score of the model
print("Model Score:", classifier.score(features, target))
# Make predictions using the trained model
predictions = classifier.predict([[5.4, 2.6, 4.1, 1.3],
                                  [6.7, 3.1, 4.4, 1.4],
                                  [2.0, 6.2, 1.8, 3.4],
                                  [5.9, 3.0, 5.1, 1.8]])
print("Predictions:", predictions)
