# You can also use this section to suppress warnings generated by your code:
def warn(*args, **kwargs):
    pass
import warnings
warnings.warn = warn
warnings.filterwarnings('ignore')

import pandas as pd
from sklearn.linear_model import LogisticRegression

URL = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-BD0231EN-SkillsNetwork/datasets/cancer.csv"

"""
Exercise 1 - Load a dataset
"""
df = pd.read_csv(URL)

"""
Exercise 2 - Identify the target column and the data columns
"""
print(df.sample(10))
print("Shape of the dataframe:", df.shape)

# Target is the value that our machine learning model needs to predict
target = df["diagnosis"]
# Features are the values that our machine learning model uses to make predictions
features = df[["radius_mean", "perimeter_mean", "area_mean", "smoothness_mean", "compactness_mean","concavity_mean", "symmetry_mean"]]

"""
Exercise 3 - Build and Train a Logistic Regression Model
"""
# Create a Logistic Regression model
classifier = LogisticRegression()
# Train the model using the features and target
classifier.fit(features, target)

"""
Exercise 4 - Evaluate the model and make predictions
"""
# Show the score of the model
print("Model Score:", classifier.score(features, target))
# Make predictions using the trained model
predictions = classifier.predict([[12.0, 80.0, 500.0, 0.1, 0.2, 0.3, 0.4],
                                  [15.0, 110.0, 600.0, 0.2, 0.3, 0.4, 0.5],
                                  [10.0, 70.0, 400.0, 0.05, 0.1, 0.2, 0.3],
                                  [14.0, 85.0, 550.0, 0.15, 0.25, 0.35, 0.45]])
print("Predictions:", predictions)
